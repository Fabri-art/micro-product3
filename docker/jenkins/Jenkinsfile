pipeline {
    agent any

    tools {
        maven "MAVEN_HOME"
    }

    stages {
        stage('Clone') {
            steps {
                timeout(time: 2, unit: 'MINUTES') {
                    git branch: 'main', url: 'https://github.com/Fabri-art/micro-product3.git'
                }
            }
        }

        stage('Verificar estructura') {
            steps {
                sh 'ls -la'
                sh 'ls -la micro-product'
            }
        }

        stage('Build') {
            steps {
                timeout(time: 2, unit: 'MINUTES') {
                    dir('micro-product') {
                        sh 'mvn -DskipTests clean package'
                    }
                }
            }
        }

        stage('Test') {
            steps {
                timeout(time: 2, unit: 'MINUTES') {
                    dir('micro-product') {
                        sh 'mvn clean install'
                    }
                }
            }
        }

        stage('Sonar') {
            steps {
                timeout(time: 2, unit: 'MINUTES') {
                    dir('micro-product') {
                        withSonarQubeEnv('sonarqube') {
                            sh 'mvn org.sonarsource.scanner.maven:sonar-maven-plugin:3.9.0.2155:sonar -Pcoverage'
                        }
                    }
                }
            }
        }

        stage('Quality gate') {
            steps {
                sleep(10)
                timeout(time: 10, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }

        stage('Deploy') {
            steps {
                dir('micro-product') {
                    echo "Ejecutar deploy: mvn spring-boot:run o docker-compose up"
                }
            }
        }
    }
}

